package demo.dongtaishengchengpdf;

import sun.misc.BASE64Decoder;

import java.io.FileOutputStream;
import java.io.OutputStream;


public class pdf {
    public static void main(String[] args) {
        try {

            GenerateImage("",
                    "E:\\jiexi\\test6.png" );
        }catch (Exception e){
            System.exit(-1);
        }
    }

    public static boolean GenerateImage(String imgStr, String imgFilePath) {
        // å¯¹å­èæ°ç»å­ç¬¦ä¸²è¿è¡Base64è§£ç å¹¶çæå¾ç
        if (imgStr == null){
            // å¾åæ°æ®ä¸ºç©º
            return false;
        }
        BASE64Decoder decoder = new BASE64Decoder();
        try {
            // Base64è§£ç 
            byte[] bytes = decoder.decodeBuffer(imgStr);
            for (int i = 0; i < bytes.length; ++i) {
                if (bytes[i] < 0) {
                    // è°æ´å¼å¸¸æ°æ®
                    bytes[i] += 256;
                }
            }
            // çæjpegå¾ç
            OutputStream out = new FileOutputStream(imgFilePath);
            out.write(bytes);
            out.flush();
            out.close();
            return true;
        } catch (Exception e) {
            return false;
        }
    }


}
